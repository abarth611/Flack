version: "3.7"
services:
  node:
    build: .
    container_name: chat
    restart: always
    ports:
      - "3000:3000"
    environment:
      DB_HOST: db
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      PORT: 3000
      ACCESS_SECRET_TOKEN: ${ACCESS_SECRET_TOKEN}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    depends_on:
      - db
    command: ["./wait-for.sh", "db:5432", "--", "node", "server/server.js"]
    networks:
      - app-network

  db:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    tty: true
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: /var/lib/postgresql/data
    networks:
      - app-network

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
    driver: local
